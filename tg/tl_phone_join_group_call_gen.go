// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
)

// PhoneJoinGroupCallRequest represents TL type `phone.joinGroupCall#b132ff7b`.
//
// See https://core.telegram.org/method/phone.joinGroupCall for reference.
type PhoneJoinGroupCallRequest struct {
	// Flags field of PhoneJoinGroupCallRequest.
	Flags bin.Fields
	// Muted field of PhoneJoinGroupCallRequest.
	Muted bool
	// Call field of PhoneJoinGroupCallRequest.
	Call InputGroupCall
	// JoinAs field of PhoneJoinGroupCallRequest.
	JoinAs InputPeerClass
	// InviteHash field of PhoneJoinGroupCallRequest.
	//
	// Use SetInviteHash and GetInviteHash helpers.
	InviteHash string
	// Params field of PhoneJoinGroupCallRequest.
	Params DataJSON
}

// PhoneJoinGroupCallRequestTypeID is TL type id of PhoneJoinGroupCallRequest.
const PhoneJoinGroupCallRequestTypeID = 0xb132ff7b

func (j *PhoneJoinGroupCallRequest) Zero() bool {
	if j == nil {
		return true
	}
	if !(j.Flags.Zero()) {
		return false
	}
	if !(j.Muted == false) {
		return false
	}
	if !(j.Call.Zero()) {
		return false
	}
	if !(j.JoinAs == nil) {
		return false
	}
	if !(j.InviteHash == "") {
		return false
	}
	if !(j.Params.Zero()) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (j *PhoneJoinGroupCallRequest) String() string {
	if j == nil {
		return "PhoneJoinGroupCallRequest(nil)"
	}
	type Alias PhoneJoinGroupCallRequest
	return fmt.Sprintf("PhoneJoinGroupCallRequest%+v", Alias(*j))
}

// FillFrom fills PhoneJoinGroupCallRequest from given interface.
func (j *PhoneJoinGroupCallRequest) FillFrom(from interface {
	GetMuted() (value bool)
	GetCall() (value InputGroupCall)
	GetJoinAs() (value InputPeerClass)
	GetInviteHash() (value string, ok bool)
	GetParams() (value DataJSON)
}) {
	j.Muted = from.GetMuted()
	j.Call = from.GetCall()
	j.JoinAs = from.GetJoinAs()
	if val, ok := from.GetInviteHash(); ok {
		j.InviteHash = val
	}

	j.Params = from.GetParams()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*PhoneJoinGroupCallRequest) TypeID() uint32 {
	return PhoneJoinGroupCallRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*PhoneJoinGroupCallRequest) TypeName() string {
	return "phone.joinGroupCall"
}

// TypeInfo returns info about TL type.
func (j *PhoneJoinGroupCallRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "phone.joinGroupCall",
		ID:   PhoneJoinGroupCallRequestTypeID,
	}
	if j == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "Muted",
			SchemaName: "muted",
			Null:       !j.Flags.Has(0),
		},
		{
			Name:       "Call",
			SchemaName: "call",
		},
		{
			Name:       "JoinAs",
			SchemaName: "join_as",
		},
		{
			Name:       "InviteHash",
			SchemaName: "invite_hash",
			Null:       !j.Flags.Has(1),
		},
		{
			Name:       "Params",
			SchemaName: "params",
		},
	}
	return typ
}

// Encode implements bin.Encoder.
func (j *PhoneJoinGroupCallRequest) Encode(b *bin.Buffer) error {
	if j == nil {
		return fmt.Errorf("can't encode phone.joinGroupCall#b132ff7b as nil")
	}
	b.PutID(PhoneJoinGroupCallRequestTypeID)
	return j.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (j *PhoneJoinGroupCallRequest) EncodeBare(b *bin.Buffer) error {
	if j == nil {
		return fmt.Errorf("can't encode phone.joinGroupCall#b132ff7b as nil")
	}
	if !(j.Muted == false) {
		j.Flags.Set(0)
	}
	if !(j.InviteHash == "") {
		j.Flags.Set(1)
	}
	if err := j.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.joinGroupCall#b132ff7b: field flags: %w", err)
	}
	if err := j.Call.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.joinGroupCall#b132ff7b: field call: %w", err)
	}
	if j.JoinAs == nil {
		return fmt.Errorf("unable to encode phone.joinGroupCall#b132ff7b: field join_as is nil")
	}
	if err := j.JoinAs.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.joinGroupCall#b132ff7b: field join_as: %w", err)
	}
	if j.Flags.Has(1) {
		b.PutString(j.InviteHash)
	}
	if err := j.Params.Encode(b); err != nil {
		return fmt.Errorf("unable to encode phone.joinGroupCall#b132ff7b: field params: %w", err)
	}
	return nil
}

// SetMuted sets value of Muted conditional field.
func (j *PhoneJoinGroupCallRequest) SetMuted(value bool) {
	if value {
		j.Flags.Set(0)
		j.Muted = true
	} else {
		j.Flags.Unset(0)
		j.Muted = false
	}
}

// GetMuted returns value of Muted conditional field.
func (j *PhoneJoinGroupCallRequest) GetMuted() (value bool) {
	return j.Flags.Has(0)
}

// GetCall returns value of Call field.
func (j *PhoneJoinGroupCallRequest) GetCall() (value InputGroupCall) {
	return j.Call
}

// GetJoinAs returns value of JoinAs field.
func (j *PhoneJoinGroupCallRequest) GetJoinAs() (value InputPeerClass) {
	return j.JoinAs
}

// SetInviteHash sets value of InviteHash conditional field.
func (j *PhoneJoinGroupCallRequest) SetInviteHash(value string) {
	j.Flags.Set(1)
	j.InviteHash = value
}

// GetInviteHash returns value of InviteHash conditional field and
// boolean which is true if field was set.
func (j *PhoneJoinGroupCallRequest) GetInviteHash() (value string, ok bool) {
	if !j.Flags.Has(1) {
		return value, false
	}
	return j.InviteHash, true
}

// GetParams returns value of Params field.
func (j *PhoneJoinGroupCallRequest) GetParams() (value DataJSON) {
	return j.Params
}

// Decode implements bin.Decoder.
func (j *PhoneJoinGroupCallRequest) Decode(b *bin.Buffer) error {
	if j == nil {
		return fmt.Errorf("can't decode phone.joinGroupCall#b132ff7b to nil")
	}
	if err := b.ConsumeID(PhoneJoinGroupCallRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode phone.joinGroupCall#b132ff7b: %w", err)
	}
	return j.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (j *PhoneJoinGroupCallRequest) DecodeBare(b *bin.Buffer) error {
	if j == nil {
		return fmt.Errorf("can't decode phone.joinGroupCall#b132ff7b to nil")
	}
	{
		if err := j.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.joinGroupCall#b132ff7b: field flags: %w", err)
		}
	}
	j.Muted = j.Flags.Has(0)
	{
		if err := j.Call.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.joinGroupCall#b132ff7b: field call: %w", err)
		}
	}
	{
		value, err := DecodeInputPeer(b)
		if err != nil {
			return fmt.Errorf("unable to decode phone.joinGroupCall#b132ff7b: field join_as: %w", err)
		}
		j.JoinAs = value
	}
	if j.Flags.Has(1) {
		value, err := b.String()
		if err != nil {
			return fmt.Errorf("unable to decode phone.joinGroupCall#b132ff7b: field invite_hash: %w", err)
		}
		j.InviteHash = value
	}
	{
		if err := j.Params.Decode(b); err != nil {
			return fmt.Errorf("unable to decode phone.joinGroupCall#b132ff7b: field params: %w", err)
		}
	}
	return nil
}

// Ensuring interfaces in compile-time for PhoneJoinGroupCallRequest.
var (
	_ bin.Encoder     = &PhoneJoinGroupCallRequest{}
	_ bin.Decoder     = &PhoneJoinGroupCallRequest{}
	_ bin.BareEncoder = &PhoneJoinGroupCallRequest{}
	_ bin.BareDecoder = &PhoneJoinGroupCallRequest{}
)

// PhoneJoinGroupCall invokes method phone.joinGroupCall#b132ff7b returning error if any.
//
// See https://core.telegram.org/method/phone.joinGroupCall for reference.
func PhoneJoinGroupCall(ctx context.Context, rpc Invoker, request *PhoneJoinGroupCallRequest) (UpdatesClass, error) {
	var result UpdatesBox

	if err := rpc.InvokeRaw(ctx, request, &result); err != nil {
		return nil, err
	}
	return result.Updates, nil
}
